diff --git a/dist/vite.js b/dist/vite.js
index 4bcd15626aa8aa0315f6fd3291efef41e9ee19a2..68ae2766ea64f8d224fb07c2b989b46a2ccca8bf 100644
--- a/dist/vite.js
+++ b/dist/vite.js
@@ -2676,12 +2676,12 @@ async function prerenderResourceRoute(handler, prerenderPath, clientBuildDirecto
   let normalizedPath = `${reactRouterConfig.basename}${prerenderPath}/`.replace(/\/\/+/g, "/").replace(/\/$/g, "");
   let request = new Request(`http://localhost${normalizedPath}`, requestInit);
   let response = await handler(request);
-  let text = await response.text();
-  validatePrerenderedResponse(response, text, "Prerender", normalizedPath);
+  let content = await response.arrayBuffer();
+  validatePrerenderedResponse(response, content, "Prerender", normalizedPath);
   let outdir = path6.relative(process.cwd(), clientBuildDirectory);
   let outfile = path6.join(outdir, ...normalizedPath.split("/"));
   await fse.ensureDir(path6.dirname(outfile));
-  await fse.outputFile(outfile, text);
+  await fse.outputFile(outfile, Buffer.from(content));
   viteConfig.logger.info(`Prerender: Generated ${import_picocolors3.default.bold(outfile)}`);
 }
 async function prerenderManifest(build, clientBuildDirectory, reactRouterConfig, viteConfig) {
@@ -2696,11 +2696,11 @@ async function prerenderManifest(build, clientBuildDirectory, reactRouterConfig,
   await fse.outputFile(outfile, manifestData);
   viteConfig.logger.info(`Prerender: Generated ${import_picocolors3.default.bold(outfile)}`);
 }
-function validatePrerenderedResponse(response, html, prefix, path7) {
+function validatePrerenderedResponse(response, content, prefix, path7) {
   if (response.status !== 200) {
     throw new Error(
       `${prefix}: Received a ${response.status} status code from \`entry.server.tsx\` while prerendering the \`${path7}\` path.
-${html}`
+${content}`
     );
   }
 }
