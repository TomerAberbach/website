diff --git a/index.js b/index.js
index cc1556c6cefd1c147d00f197ea0f02ed0dbefc69..ea9d6440c55d9b1d05bbe1c970c6f86dbca70f0a 100644
--- a/index.js
+++ b/index.js
@@ -122,7 +122,7 @@ function createPanZoom(domElement, options) {
     dispose: dispose,
     moveBy: internalMoveBy,
     moveTo: moveTo,
-    smoothMoveTo: smoothMoveTo, 
+    smoothMoveTo: smoothMoveTo,
     centerOn: centerOn,
     zoomTo: publicZoomTo,
     zoomAbs: zoomAbs,
@@ -150,7 +150,7 @@ function createPanZoom(domElement, options) {
   };
 
   eventify(api);
-  
+
   var initialX = typeof options.initialX === 'number' ? options.initialX : transform.x;
   var initialY = typeof options.initialY === 'number' ? options.initialY : transform.y;
   var initialZoom = typeof options.initialZoom === 'number' ? options.initialZoom : transform.scale;
@@ -593,13 +593,8 @@ function createPanZoom(domElement, options) {
     beforeTouch(e);
     clearPendingClickEventTimeout();
 
-    if (e.touches.length === 1) {
+    if (e.touches.length === 2) {
       return handleSingleFingerTouch(e, e.touches[0]);
-    } else if (e.touches.length === 2) {
-      // handleTouchMove() will care about pinch zoom.
-      pinchZoomLength = getPinchZoomLength(e.touches[0], e.touches[1]);
-      multiTouch = true;
-      startTouchListenerIfNeeded();
     }
   }
 
@@ -657,7 +652,7 @@ function createPanZoom(domElement, options) {
   }
 
   function handleTouchMove(e) {
-    if (e.touches.length === 1) {
+    if (e.touches.length === 2) {
       e.stopPropagation();
       var touch = e.touches[0];
 
@@ -673,33 +668,6 @@ function createPanZoom(domElement, options) {
       mouseX = point.x;
       mouseY = point.y;
       internalMoveBy(dx, dy);
-    } else if (e.touches.length === 2) {
-      // it's a zoom, let's find direction
-      multiTouch = true;
-      var t1 = e.touches[0];
-      var t2 = e.touches[1];
-      var currentPinchLength = getPinchZoomLength(t1, t2);
-
-      // since the zoom speed is always based on distance from 1, we need to apply
-      // pinch speed only on that distance from 1:
-      var scaleMultiplier =
-        1 + (currentPinchLength / pinchZoomLength - 1) * pinchSpeed;
-
-      var firstTouchPoint = getOffsetXY(t1);
-      var secondTouchPoint = getOffsetXY(t2);
-      mouseX = (firstTouchPoint.x + secondTouchPoint.x) / 2;
-      mouseY = (firstTouchPoint.y + secondTouchPoint.y) / 2;
-      if (transformOrigin) {
-        var offset = getTransformOriginOffset();
-        mouseX = offset.x;
-        mouseY = offset.y;
-      }
-
-      publicZoomTo(mouseX, mouseY, scaleMultiplier);
-
-      pinchZoomLength = currentPinchLength;
-      e.stopPropagation();
-      e.preventDefault();
     }
   }
 
@@ -1098,4 +1066,3 @@ function autoRun() {
 }
 
 autoRun();
-	
